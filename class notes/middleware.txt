Middleware is a section in an Express that intercepts the requests and modifies, or on the way out it modify an exit response. It basically modifies incoming requests or outgoing responses.

Middleware is good for user authentication, logging, and parsing requests.
it is declared with "app.use"

An example of a simple login function within middleware-

app.use(function (request, response, next) {
  console.log(request.method, request.path);
  next();
});

In Express EVERYTHING is Middleware.  --

app.get('/user/:id', function (request, response, next) {
  response.send('USER')
})

Logging with Middleware npm instal morgan --save

var morgan = require('morgan');
app.use(morgan('dev'));

Session Middleware- npm install express-session

var session = require('express-session');
app.use(session({
  secret: process.env.SECRET_KEY || 'dev',
  resave: true,
  saveUninitialized: false,
  cookie: {maxAge: 60000}
}));

How cookies work

1. The browser requests a web page

2. The server ends the page and the cookie.

3. The browser requests another page from the same server.

An example of how the cookies work, HTTP response-

HTTP/1.0 200 OK
Set-Cookie: lu=Rg3vHJZnehYLjVg7qi3bZjzg; Expires=Tue, 15 Jan 2013 21:47:38 GMT; Path=/; Domain=.example.com; HttpOnly

Set-Cookie: made_write_conn=1295214458; Path=/; Domain=.example.com

Set-Cookie: reg_fb_gate=deleted; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Path=/; Domain=.example.com; HttpOnly

user login example-

app.use(function (request, response, next) {
  if (request.session.user) {
    next();
  } else if (request.path == '/login') {
    next();
  } else {
    response.redirect('/login');
  }
});

second example--

app.get('/login', function (request, response) {
  response.render('login.hbs');
});
app.post('/login', function (request, response) {
  var username = request.body.username;
  var password = request.body.password;
  if (username == 'aaron' && password == 'narf') {
    request.session.user = username;
    response.redirect('/');
  } else {
    response.render('login.hbs');
  }
});
