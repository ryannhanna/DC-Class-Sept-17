HTML 5 PushState vs Hashes

history.pushState(stateObj, "page 2", "bar.html");


Basic Usage: App.jsx

import {BrowserRouter, Route, Link}
  from 'react-router-dom';
const Home = () => (<h2>Home</h2>)
// render
<BrowserRouter>
  <div>
    <ul>
      <li><Link to="/">Home</Link></li>
      <li><Link to="/form">Form</Link></li>
    </ul>
    <Route exact path="/" component={Home}/>
    <Route path="/form" component={MyForm}/>
  </div>
</BrowserRouter>

Refactor: App.jsx

<MuiThemeProvider muiTheme={theme}>
  <div>
    <AppBar title="My Awesome Form" />
    <BrowserRouter>
      <div>
        <ul>
          <li><Link to="/">Home</Link></li>
          <li><Link to="/form">Form</Link></li>
        </ul>
        <Route exact path="/" component={Home}/>
        <Route path="/form" component={MyForm}/>
      </div>
    </BrowserRouter>
  </div>
</MuiThemeProvider>


No Match (404)

import {BrowserRouter, Route, Link, Switch}
  from 'react-router-dom';
const NoMatch = ({ location }) => (
  <div>
    <h3>Page not found: {location.pathname}</h3>
  </div>
)
// render
<Switch>
  <Route exact path="/" component={Home}/>
  <Route path="/form" component={MyForm}/>
  <Route component={NoMatch}/>
</Switch>

Redirects

import {BrowserRouter, Route, Link, Switch, Redirect}
  from 'react-router-dom';
// render
<Redirect from="/old-form" to="/form"/>

URL Parameters

const Article = ({ match }) => (
  <div>
    <h3>Article Slug: {match.params.slug}</h3>
  </div>
)
// render
<Route path="/article/:id" component={Article}/>


Controlling the Route Manually

constructor(props) {
  super(props);
  this.state = {name: '', color: 'blue'};
  this.history = props.history;
  // props.location, props.location also
}
// later
this.history.push('/');
